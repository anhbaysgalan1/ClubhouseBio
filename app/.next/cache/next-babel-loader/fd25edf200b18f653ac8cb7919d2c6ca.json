{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jan/Documents/Programming/JavaScript/KindleClippings/app/pages/index.tsx\";\nimport React from 'react';\nimport Head from 'next/head';\nexport default function Home() {\n  // const [fileName, setFileName] = useState<string | null>(null);\n  // // const [fileContent, setFileContent] = useState<string | null>(null);\n  // const [fileParsedContent, setFileParsedContent] = useState<Map<\n  //   any,\n  //   any\n  // > | null>(null);\n  // const parseFile = (file: string) => {\n  //   const splittedFile = file.split(/\\r?\\n/g);\n  //   // console.log(splittedFile.length);\n  //   const Notes = new Map();\n  //   let blockCounter = 0;\n  //   while (blockCounter < Math.floor(splittedFile.length / 5)) {\n  //     // parse block of 5 lines\n  //     const title = splittedFile[blockCounter * 5 + 0];\n  //     const clippingType = splittedFile[blockCounter * 5 + 1];\n  //     const Note = splittedFile[blockCounter * 5 + 3];\n  //     blockCounter += 1;\n  //     if (clippingType.includes('Highlight')) {\n  //       // add block to dict\n  //       if (Notes.has(title)) {\n  //         const oldNote = Notes.get(title);\n  //         const newNote = `${oldNote}\\n\\n${Note}`;\n  //         Notes.set(title, newNote);\n  //       } else {\n  //         Notes.set(title, Note);\n  //       }\n  //     }\n  //   }\n  //   return Notes;\n  // };\n  // const handleFileUpload = (e: React.ChangeEvent<HTMLInputElement>) => {\n  //   const target = e.target as HTMLInputElement;\n  //   const file: File = (target.files as FileList)[0];\n  //   const reader = new FileReader();\n  //   reader.readAsText(file);\n  //   reader.onload = () => {\n  //     // setFileContent(reader.result as string);\n  //     setFileParsedContent(parseFile(reader.result as string));\n  //   };\n  //   reader.onerror = () => {\n  //     // console.log(reader.error);\n  //   };\n  //   setFileName(file.name);\n  // };\n  // const printNoteMap = (key: string, value: string) => {\n  //   return (\n  //     <div className=\"mt-4\">\n  //       <h3 className=\"text-center text-xl\">{key}</h3>\n  //       <div className=\"whitespace-pre-line\">{value}</div>\n  //     </div>\n  //   );\n  // };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Kindle Clippings Parser\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"icon\",\n        href: \"/favicon.ico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/jan/Documents/Programming/JavaScript/KindleClippings/app/pages/index.tsx"],"names":["React","Head","Home"],"mappings":";;AAAA,OAAOA,KAAP,MAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,eAAe,SAASC,IAAT,GAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,GAAG,EAAC,MAAV;AAAiB,QAAA,IAAI,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD","sourcesContent":["import React, { useState } from 'react';\nimport Head from 'next/head';\n\nexport default function Home() {\n  // const [fileName, setFileName] = useState<string | null>(null);\n  // // const [fileContent, setFileContent] = useState<string | null>(null);\n  // const [fileParsedContent, setFileParsedContent] = useState<Map<\n  //   any,\n  //   any\n  // > | null>(null);\n\n  // const parseFile = (file: string) => {\n  //   const splittedFile = file.split(/\\r?\\n/g);\n  //   // console.log(splittedFile.length);\n  //   const Notes = new Map();\n  //   let blockCounter = 0;\n  //   while (blockCounter < Math.floor(splittedFile.length / 5)) {\n  //     // parse block of 5 lines\n  //     const title = splittedFile[blockCounter * 5 + 0];\n  //     const clippingType = splittedFile[blockCounter * 5 + 1];\n  //     const Note = splittedFile[blockCounter * 5 + 3];\n  //     blockCounter += 1;\n\n  //     if (clippingType.includes('Highlight')) {\n  //       // add block to dict\n  //       if (Notes.has(title)) {\n  //         const oldNote = Notes.get(title);\n  //         const newNote = `${oldNote}\\n\\n${Note}`;\n  //         Notes.set(title, newNote);\n  //       } else {\n  //         Notes.set(title, Note);\n  //       }\n  //     }\n  //   }\n  //   return Notes;\n  // };\n\n  // const handleFileUpload = (e: React.ChangeEvent<HTMLInputElement>) => {\n  //   const target = e.target as HTMLInputElement;\n  //   const file: File = (target.files as FileList)[0];\n  //   const reader = new FileReader();\n  //   reader.readAsText(file);\n  //   reader.onload = () => {\n  //     // setFileContent(reader.result as string);\n  //     setFileParsedContent(parseFile(reader.result as string));\n  //   };\n\n  //   reader.onerror = () => {\n  //     // console.log(reader.error);\n  //   };\n\n  //   setFileName(file.name);\n  // };\n\n  // const printNoteMap = (key: string, value: string) => {\n  //   return (\n  //     <div className=\"mt-4\">\n  //       <h3 className=\"text-center text-xl\">{key}</h3>\n  //       <div className=\"whitespace-pre-line\">{value}</div>\n  //     </div>\n  //   );\n  // };\n\n  return (\n    <div>\n      <Head>\n        <title>Kindle Clippings Parser</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n\n      {/* <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-3xl mx-auto\">\n          <h1 className=\"mt-8 text-2xl text-center\">\n            Welcome friends of LibGen!\n          </h1>\n          <div className=\"mt-8\">\n            <input type=\"file\" accept=\".txt\" onChange={handleFileUpload} />\n            Uploaded File: {fileName}\n            <div className=\"mt-4\">\n              <h2>Parsed File:</h2>\n              {fileParsedContent !== null\n                ? [...fileParsedContent.keys()].map((noteTitle) => {\n                    return printNoteMap(\n                      noteTitle,\n                      fileParsedContent.get(noteTitle)\n                    );\n                  })\n                : null}\n            </div>\n          </div>\n        </div>\n      </main> */}\n      {/* <footer /> */}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}