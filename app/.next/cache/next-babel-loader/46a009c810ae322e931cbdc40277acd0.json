{"ast":null,"code":"import _toConsumableArray from \"/Users/jan/Documents/Programming/JavaScript/KindleClippings/app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React, { useState } from 'react';\nimport Head from 'next/head';\nexport default function Home() {\n  var _useState = useState(null),\n      fileName = _useState[0],\n      setFileName = _useState[1]; // const [copySuccess, setCopySuccess] = useState('');\n  // const textAreaRef = useRef(null);\n\n\n  var _useState2 = useState(null),\n      fileParsedContent = _useState2[0],\n      setFileParsedContent = _useState2[1];\n\n  var parseFile = function parseFile(file) {\n    var splittedFile = file.split(/\\r?\\n/g); // console.log(splittedFile.length);\n\n    var Notes = new Map();\n    var blockCounter = 0;\n\n    while (blockCounter < Math.floor(splittedFile.length / 5)) {\n      // parse block of 5 lines\n      var title = splittedFile[blockCounter * 5 + 0];\n      var clippingType = splittedFile[blockCounter * 5 + 1];\n      var Note = splittedFile[blockCounter * 5 + 3];\n      blockCounter += 1;\n\n      if (clippingType.includes('Highlight')) {\n        // add block to dict\n        if (Notes.has(title)) {\n          var oldNote = Notes.get(title);\n          var newNote = \"\".concat(oldNote, \"\\n\\n\").concat(Note);\n          Notes.set(title, newNote);\n        } else {\n          Notes.set(title, Note);\n        }\n      }\n    }\n\n    return Notes;\n  };\n\n  var handleFileUpload = function handleFileUpload(e) {\n    var target = e.target;\n    var file = target.files[0];\n    var reader = new FileReader();\n    reader.readAsText(file);\n\n    reader.onload = function () {\n      // setFileContent(reader.result as string);\n      setFileParsedContent(parseFile(reader.result));\n    };\n\n    reader.onerror = function () {// console.log(reader.error);\n    };\n\n    setFileName(file.name);\n  }; // const copyToClipboard = (e) => {\n  //   if(textAreaRef){\n  //   }\n  //   textAreaRef.current.select();\n  //   document.execCommand('copy');\n  //   // This is just personal preference.\n  //   // I prefer to not show the the whole text area selected.\n  //   e.target.focus();\n  //   setCopySuccess('Copied!');\n  // };\n\n\n  var printNoteMap = function printNoteMap(key, value) {\n    return /*#__PURE__*/_jsxs(\"div\", {\n      className: \"mt-4 bg-white overflow-hidden sm:rounded-lg sm:shadow\",\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: \"bg-white px-4 py-5 border-b border-gray-200 sm:px-6\",\n        children: /*#__PURE__*/_jsx(\"h3\", {\n          className: \"text-lg leading-6  text-gray-900 font-sans font-semibold\",\n          children: key\n        })\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"whitespace-pre-line px-4 py-5 sm:px-6 font-light\",\n        children: value\n      })]\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: \"Kindle Clippings Parser\"\n      }), /*#__PURE__*/_jsx(\"link\", {\n        rel: \"icon\",\n        href: \"/favicon.ico\"\n      })]\n    }), /*#__PURE__*/_jsx(\"main\", {\n      className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\",\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"max-w-3xl mx-auto\",\n        children: [/*#__PURE__*/_jsx(\"h1\", {\n          className: \"mt-8 text-2xl text-center font-test font-bold\",\n          children: \"Welcome friends of LibGen!\"\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"mt-2\",\n          children: [\"This is a simple tool I built for my roommate\", ' ', /*#__PURE__*/_jsx(\"a\", {\n            href: \"https://www.jandamm.me\",\n            className: \"text-blue-700 underline font-bold\",\n            children: \"Jan Damm\"\n          }), \". It parses your Kindle\", ' ', /*#__PURE__*/_jsx(\"span\", {\n            className: \"bg-red-200\",\n            children: \"Clippings.txt\"\n          }), \" file and outputs all your notes in a clean format so that you can copy your notes more easily to other tools like Notion.\"]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"mt-8\",\n          children: [/*#__PURE__*/_jsx(\"input\", {\n            type: \"file\",\n            accept: \".txt\",\n            onChange: handleFileUpload\n          }), \"Uploaded File: \", fileName, /*#__PURE__*/_jsxs(\"div\", {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsx(\"h2\", {\n              children: \"Parsed File:\"\n            }), fileParsedContent !== null ? _toConsumableArray(fileParsedContent.keys()).map(function (noteTitle) {\n              return printNoteMap(noteTitle, fileParsedContent.get(noteTitle));\n            }) : null]\n          })]\n        })]\n      })\n    }), /*#__PURE__*/_jsx(\"footer\", {})]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}