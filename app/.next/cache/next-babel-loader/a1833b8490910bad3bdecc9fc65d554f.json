{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jan/Documents/Programming/JavaScript/KindleClippings/app/pages/index.tsx\";\nimport React, { useState } from 'react';\nimport Head from 'next/head';\nexport default function Home() {\n  const {\n    0: fileName,\n    1: setFileName\n  } = useState(null);\n  const {\n    0: fileContent,\n    1: setFileContent\n  } = useState(null);\n  const {\n    0: fileParsedContent,\n    1: setFileParsedContent\n  } = useState(null);\n\n  const parseFile = file => {\n    const splittedFile = file.split(/\\r?\\n/g);\n    console.log(splittedFile.length);\n    const Notes = new Map();\n    const blockCounter = 0;\n\n    while (blockCounter < Math.floor(splittedFile.length / 5)) {\n      // parse block of 5 lines\n      const title = splittedFile[blockCounter * 5 + 0];\n      const clippingType = splittedFile[blockCounter * 5 + 1];\n      const Note = splittedFile[blockCounter * 5 + 3];\n\n      if (clippingType.includes('Highlight')) {\n        // add block to dict\n        if (Notes.has(title)) {\n          const oldNote = Notes[title];\n          const newNote = `${oldNote}\\n${Note}`;\n          Notes.set(title, newNote);\n        } else {\n          Notes.set(title, Note);\n        }\n      }\n    }\n\n    return 'Hi';\n  };\n\n  const handleFileUpload = e => {\n    const target = e.target;\n    const file = target.files[0];\n    const reader = new FileReader();\n    reader.readAsText(file);\n\n    reader.onload = () => {\n      setFileContent(reader.result);\n      setFileParsedContent(parseFile(reader.result));\n    };\n\n    reader.onerror = () => {\n      console.log(reader.error);\n    };\n\n    setFileName(file.name);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Kindle Clippings Parser\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-3xl mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"mt-8 text-2xl text-center\",\n          children: \"Welcome friends of LibGen!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".txt\",\n            onChange: handleFileUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), \"Uploaded File: \", fileName, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"File: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), fileContent]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Parsed File:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), fileParsedContent]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/jan/Documents/Programming/JavaScript/KindleClippings/app/pages/index.tsx"],"names":["React","useState","Head","Home","fileName","setFileName","fileContent","setFileContent","fileParsedContent","setFileParsedContent","parseFile","file","splittedFile","split","console","log","length","Notes","Map","blockCounter","Math","floor","title","clippingType","Note","includes","has","oldNote","newNote","set","handleFileUpload","e","target","files","reader","FileReader","readAsText","onload","result","onerror","error","name"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Head from 'next/head';\n\nexport default function Home() {\n  const [fileName, setFileName] = useState<string | null>(null);\n  const [fileContent, setFileContent] = useState<string | null>(null);\n  const [fileParsedContent, setFileParsedContent] = useState<string | null>(\n    null\n  );\n\n  const parseFile = (file: string) => {\n    const splittedFile = file.split(/\\r?\\n/g);\n    console.log(splittedFile.length);\n    const Notes = new Map();\n    const blockCounter = 0;\n    while (blockCounter < Math.floor(splittedFile.length / 5)) {\n      // parse block of 5 lines\n      const title = splittedFile[blockCounter * 5 + 0];\n      const clippingType = splittedFile[blockCounter * 5 + 1];\n      const Note = splittedFile[blockCounter * 5 + 3];\n\n      if (clippingType.includes('Highlight')) {\n        // add block to dict\n        if (Notes.has(title)) {\n          const oldNote = Notes[title];\n          const newNote = `${oldNote}\\n${Note}`;\n          Notes.set(title, newNote);\n        } else {\n          Notes.set(title, Note);\n        }\n      }\n    }\n    return 'Hi';\n  };\n\n  const handleFileUpload = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const target = e.target as HTMLInputElement;\n    const file: File = (target.files as FileList)[0];\n    const reader = new FileReader();\n    reader.readAsText(file);\n    reader.onload = () => {\n      setFileContent(reader.result as string);\n      setFileParsedContent(parseFile(reader.result as string));\n    };\n\n    reader.onerror = () => {\n      console.log(reader.error);\n    };\n\n    setFileName(file.name);\n  };\n  return (\n    <div>\n      <Head>\n        <title>Kindle Clippings Parser</title>\n        {/* <link rel=\"icon\" href=\"/favicon.ico\" /> */}\n      </Head>\n\n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-3xl mx-auto\">\n          <h1 className=\"mt-8 text-2xl text-center\">\n            Welcome friends of LibGen!\n          </h1>\n          <div className=\"mt-8\">\n            <input type=\"file\" accept=\".txt\" onChange={handleFileUpload} />\n            Uploaded File: {fileName}\n            <div className=\"mt-4\">\n              <h2>File: </h2>\n              {fileContent}\n            </div>\n            <div className=\"mt-4\">\n              <h2>Parsed File:</h2>\n              {fileParsedContent}\n            </div>\n          </div>\n        </div>\n      </main>\n\n      <footer />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}