{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React, { useState } from 'react';\nimport Head from 'next/head';\nexport default function Home() {\n  const {\n    0: fileName,\n    1: setFileName\n  } = useState(null); // const [fileContent, setFileContent] = useState<string | null>(null);\n\n  const {\n    0: fileParsedContent,\n    1: setFileParsedContent\n  } = useState(null);\n\n  const parseFile = file => {\n    const splittedFile = file.split(/\\r?\\n/g); // console.log(splittedFile.length);\n\n    const Notes = new Map();\n    let blockCounter = 0;\n\n    while (blockCounter < Math.floor(splittedFile.length / 5)) {\n      // parse block of 5 lines\n      const title = splittedFile[blockCounter * 5 + 0];\n      const clippingType = splittedFile[blockCounter * 5 + 1];\n      const Note = splittedFile[blockCounter * 5 + 3];\n      blockCounter += 1;\n\n      if (clippingType.includes('Highlight')) {\n        // add block to dict\n        if (Notes.has(title)) {\n          const oldNote = Notes.get(title);\n          const newNote = `${oldNote}\\n\\n${Note}`;\n          Notes.set(title, newNote);\n        } else {\n          Notes.set(title, Note);\n        }\n      }\n    }\n\n    return Notes;\n  };\n\n  const handleFileUpload = e => {\n    const target = e.target;\n    const file = target.files[0];\n    const reader = new FileReader();\n    reader.readAsText(file);\n\n    reader.onload = () => {\n      // setFileContent(reader.result as string);\n      setFileParsedContent(parseFile(reader.result));\n    };\n\n    reader.onerror = () => {// console.log(reader.error);\n    };\n\n    setFileName(file.name);\n  };\n\n  const printNoteMap = (key, value) => {\n    return /*#__PURE__*/_jsxs(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsx(\"h3\", {\n        className: \"text-center text-xl\",\n        children: key\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"whitespace-pre-line\",\n        children: value\n      })]\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsx(\"title\", {\n        children: \"Kindle Clippings Parser\"\n      })\n    }), /*#__PURE__*/_jsx(\"main\", {\n      className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\",\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"max-w-3xl mx-auto\",\n        children: [/*#__PURE__*/_jsx(\"h1\", {\n          className: \"mt-8 text-2xl text-center\",\n          children: \"Welcome friends of LibGen!\"\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"mt-8\",\n          children: [/*#__PURE__*/_jsx(\"input\", {\n            type: \"file\",\n            accept: \".txt\",\n            onChange: handleFileUpload\n          }), \"Uploaded File: \", fileName, /*#__PURE__*/_jsx(\"div\", {\n            className: \"mt-4\",\n            children: /*#__PURE__*/_jsx(\"h2\", {\n              children: \"File: \"\n            })\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsx(\"h2\", {\n              children: \"Parsed File:\"\n            }), fileParsedContent ? [...fileParsedContent.keys()].map(noteTitle => {\n              return printNoteMap(noteTitle, fileParsedContent.get(noteTitle));\n            }) : null]\n          })]\n        })]\n      })\n    }), /*#__PURE__*/_jsx(\"footer\", {})]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}