{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jan/Documents/Programming/leetcodebuddy/frontend/app/components/auth/ProtectedRoute.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport AuthContext from \"./AuthContext\";\n\nvar ProtectedRoute = function ProtectedRoute(children) {\n  _s();\n\n  // const isAuthenticated = true;\n  // const isLoading = false;\n  // const { isAuthenticated, isLoading } = useAuth();\n  var _useContext = useContext(AuthContext),\n      isAuthenticated = _useContext.isAuthenticated,\n      isLoading = _useContext.isLoading;\n\n  if (isLoading || !isAuthenticated && window.location.pathname !== '/login') {\n    //   return <LoadingScreen />; \n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, _this);\n  }\n\n  return children;\n};\n\n_s(ProtectedRoute, \"b0ai2evw7whu88jfCUTuJxGipxA=\");\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["/Users/jan/Documents/Programming/leetcodebuddy/frontend/app/components/auth/ProtectedRoute.tsx"],"names":["useContext","AuthContext","ProtectedRoute","children","isAuthenticated","isLoading","window","location","pathname"],"mappings":";;;;;;AAAA,SAAQA,UAAR,QAAyB,OAAzB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAEC,QAAF,EAAqB;AAAA;;AACxC;AACA;AACA;AAHwC,oBAIDH,UAAU,CAACC,WAAD,CAJT;AAAA,MAIhCG,eAJgC,eAIhCA,eAJgC;AAAA,MAIfC,SAJe,eAIfA,SAJe;;AAKxC,MAAIA,SAAS,IAAK,CAACD,eAAD,IAAoBE,MAAM,CAACC,QAAP,CAAgBC,QAAhB,KAA6B,QAAnE,EAA6E;AAC7E;AACA,wBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAR;AACC;;AACD,SAAOL,QAAP;AACD,CAVH;;GAAMD,c;;KAAAA,c;AAYN,eAAeA,cAAf","sourcesContent":["import {useContext} from 'react'\nimport useAuth from '../../hooks/useAuth'\nimport AuthContext from \"./AuthContext\"\n\nconst ProtectedRoute = ( children: any ) => {\n    // const isAuthenticated = true;\n    // const isLoading = false;\n    // const { isAuthenticated, isLoading } = useAuth();\n    const { isAuthenticated, isLoading } = useContext(AuthContext);\n    if (isLoading || (!isAuthenticated && window.location.pathname !== '/login')){\n    //   return <LoadingScreen />; \n    return (<h1>Loading...</h1>)\n    }\n    return children;\n  };\n\nexport default ProtectedRoute"]},"metadata":{},"sourceType":"module"}